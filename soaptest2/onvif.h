/* onvif.h
   Generated by wsdl2h 1.2.9l from http://www.onvif.org/onvif/ver10/network/wsdl/remotediscovery.wsdl and ./typemap.dat
   2015-07-30 02:02:20 GMT
   Copyright (C) 2001-2007 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://www.onvif.org/ver10/network/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tdn = "http://www.onvif.org/ver10/network/wsdl"
ns1 = "http://schemas.xmlsoap.org/ws/2005/04/discovery"
ns2 = "http://schemas.xmlsoap.org/ws/2004/08/addressing"

*/

//gsoap tdn   schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap ns1   schema namespace:	http://schemas.xmlsoap.org/ws/2005/04/discovery
//gsoap ns2   schema namespace:	http://schemas.xmlsoap.org/ws/2004/08/addressing
//gsoap tdn   schema elementForm:	qualified
//gsoap tdn   schema attributeForm:	unqualified
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:ID"
typedef char* xsd__ID;

/// Primitive built-in type "xs:IDREFS"
typedef char* xsd__IDREFS;

/// Primitive built-in type "xs:NCName"
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anyURI"
typedef char* xsd__anyURI;

/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
};

/// Primitive built-in type "xs:nonNegativeInteger"
typedef char* xsd__nonNegativeInteger;


/// union of values "tns:RelationshipType xs:QName"
typedef char* ns1__OpenRelationshipType;

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":QNameListType is a simpleType containing a whitespace separated list of xs:QName.
typedef char* ns1__QNameListType;

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType is a simpleType containing a whitespace separated list of xs:anyURI.
typedef char* ns1__UriListType;

/// union of values "tns:FaultCodeType xs:QName"
typedef char* ns1__FaultCodeOpenType;

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":RelationshipType is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'ns1__RelationshipType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__RelationshipType
{
	ns1__RelationshipType__ns1__Suppression,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2005/04/discovery":Suppression"
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":FaultCodeType is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'ns1__FaultCodeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__FaultCodeType
{
	ns1__FaultCodeType__ns1__MatchingRuleNotSupported,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2005/04/discovery":MatchingRuleNotSupported"
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":RelationshipTypeValues is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'ns2__RelationshipTypeValues' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns2__RelationshipTypeValues
{
	ns2__RelationshipTypeValues__ns2__Reply,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":Reply"
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":FaultSubcodeValues is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'ns2__FaultSubcodeValues' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns2__FaultSubcodeValues
{
	ns2__FaultSubcodeValues__ns2__InvalidMessageInformationHeader,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":InvalidMessageInformationHeader"
	ns2__FaultSubcodeValues__ns2__MessageInformationHeaderRequired,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":MessageInformationHeaderRequired"
	ns2__FaultSubcodeValues__ns2__DestinationUnreachable,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":DestinationUnreachable"
	ns2__FaultSubcodeValues__ns2__ActionNotSupported,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":ActionNotSupported"
	ns2__FaultSubcodeValues__ns2__EndpointUnavailable,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointUnavailable"
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType is a complexType.
struct ns1__HelloType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    struct ns2__EndpointReferenceType*   ns2__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    ns1__QNameListType                   ns1__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct ns1__ScopesType*              ns1__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    ns1__UriListType                     ns1__XAddrs                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         ns1__MetadataVersion           1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType is a complexType.
struct ns1__ByeType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    struct ns2__EndpointReferenceType*   ns2__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    ns1__QNameListType                   ns1__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct ns1__ScopesType*              ns1__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    ns1__UriListType                     ns1__XAddrs                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int*                        ns1__MetadataVersion           0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType is a complexType.
struct ns1__ProbeType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    ns1__QNameListType                   ns1__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct ns1__ScopesType*              ns1__Scopes                    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType is a complexType.
struct ns1__ProbeMatchesType
{
/// Size of array of struct ns1__ProbeMatchType* is 0..unbounded
    int                                  __sizeProbeMatch              ;
/// Array of length 0..unbounded
    struct ns1__ProbeMatchType*          ProbeMatch                     0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchType is a complexType.
struct ns1__ProbeMatchType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    struct ns2__EndpointReferenceType*   ns2__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    ns1__QNameListType                   ns1__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct ns1__ScopesType*              ns1__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    ns1__UriListType                     ns1__XAddrs                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         ns1__MetadataVersion           1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType is a complexType.
struct ns1__ResolveType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    struct ns2__EndpointReferenceType*   ns2__EndpointReference         1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchesType is a complexType.
struct ns1__ResolveMatchesType
{
/// Element ResolveMatch of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchType.
    struct ns1__ResolveMatchType*        ResolveMatch                   0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchType is a complexType.
struct ns1__ResolveMatchType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    struct ns2__EndpointReferenceType*   ns2__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    ns1__QNameListType                   ns1__Types                     0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    struct ns1__ScopesType*              ns1__Scopes                    0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    ns1__UriListType                     ns1__XAddrs                    1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         ns1__MetadataVersion           1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":SecurityType is a complexType.
struct ns1__SecurityType
{
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery":Sig.
    struct ns1__SigType*                 ns1__Sig                       0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":SigType is a complexType.
struct ns1__SigType
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// Attribute Scheme of type xs:anyURI.
   @xsd__anyURI                          Scheme                         1;	///< Required attribute.
/// Attribute KeyId of type xs:base64Binary.
   @struct xsd__base64Binary*            KeyId                          0;	///< Optional attribute.
/// Attribute Refs of type xs:IDREFS.
   @xsd__IDREFS                          Refs                           1;	///< Required attribute.
/// Attribute Sig of type xs:base64Binary.
   @struct xsd__base64Binary             Sig                            1;	///< Required attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType is a complexType.
struct ns2__EndpointReferenceType
{
/// Element Address of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
    struct ns2__AttributedURI*           Address                        1;	///< Required element.
/// Element ReferenceProperties of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferencePropertiesType.
    struct ns2__ReferencePropertiesType*  ReferenceProperties            0;	///< Optional element.
/// Element ReferenceParameters of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferenceParametersType.
    struct ns2__ReferenceParametersType*  ReferenceParameters            0;	///< Optional element.
/// Element PortType of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedQName.
    struct ns2__AttributedQName*         PortType                       0;	///< Optional element.
/// Element ServiceName of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ServiceNameType.
    struct ns2__ServiceNameType*         ServiceName                    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferencePropertiesType is a complexType.
struct ns2__ReferencePropertiesType
{
/// TODO: <any minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferenceParametersType is a complexType.
struct ns2__ReferenceParametersType
{
/// TODO: <any minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the dynamic array of XML is 0..unbounded
    int                                  __size                        ;
    _XML                                *__any                         ;	///< Catch any element content in XML string.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":ScopesType is a complexType with simpleContent.
struct ns1__ScopesType
{
/// __item wraps '"http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType' simpleContent.
    ns1__UriListType                     __item                        ;
/// Attribute MatchBy of type xs:anyURI.
   @xsd__anyURI                          MatchBy                        0;	///< Optional attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequenceType is a complexType with complexContent restriction of xs:anyType.
struct ns1__AppSequenceType
{
/// Attribute InstanceId of type xs:unsignedInt.
   @unsigned int                         InstanceId                     1;	///< Required attribute.
/// Attribute SequenceId of type xs:anyURI.
   @xsd__anyURI                          SequenceId                     0;	///< Optional attribute.
/// Attribute MessageNumber of type xs:unsignedInt.
   @unsigned int                         MessageNumber                  1;	///< Required attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":ServiceNameType is a complexType with simpleContent.
struct ns2__ServiceNameType
{
/// __item wraps 'xs:QName' simpleContent.
    _QName                               __item                        ;
/// Attribute PortName of type xs:NCName.
   @xsd__NCName                          PortName                       0;	///< Optional attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":Relationship is a complexType with simpleContent.
struct ns2__Relationship
{
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute RelationshipType of type xs:QName.
   @_QName                               RelationshipType               0;	///< Optional attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyAfterType is a complexType with simpleContent.
struct ns2__ReplyAfterType
{
/// __item wraps 'xs:nonNegativeInteger' simpleContent.
    xsd__nonNegativeInteger              __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":RetryAfterType is a complexType with simpleContent.
struct ns2__RetryAfterType
{
/// __item wraps 'xs:nonNegativeInteger' simpleContent.
    xsd__nonNegativeInteger              __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedQName is a complexType with simpleContent.
struct ns2__AttributedQName
{
/// __item wraps 'xs:QName' simpleContent.
    _QName                               __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI is a complexType with simpleContent.
struct ns2__AttributedURI
{
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// Element "http://www.onvif.org/ver10/network/wsdl":Hello of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.onvif.org/ver10/network/wsdl":Probe of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.onvif.org/ver10/network/wsdl":Bye of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Hello of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Bye of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Probe of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatches of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Resolve of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatches of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchesType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":QNameListType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ScopesType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion of type xs:unsignedInt.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":SupportedMatchingRules of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Security of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":SecurityType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Sig of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":SigType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequence of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequenceType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Attribute "http://schemas.xmlsoap.org/ws/2005/04/discovery":Id of simpleType xs:ID.
/// Note: use wsdl2h option -g to generate this global attribute declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":MessageID of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":RelatesTo of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":Relationship.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":To of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":Action of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":From of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyTo of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":FaultTo of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyAfter of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyAfterType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.xmlsoap.org/ws/2004/08/addressing":RetryAfter of type "http://schemas.xmlsoap.org/ws/2004/08/addressing":RetryAfterType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Attribute "http://schemas.xmlsoap.org/ws/2004/08/addressing":Action of simpleType xs:anyURI.
// '_ns2__Action' attribute definition intentionally left blank.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns3  service name:	RemoteDiscoveryBinding 
//gsoap ns3  service type:	RemoteDiscoveryPort 
//gsoap ns3  service namespace:	http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding 
//gsoap ns3  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns4  service name:	DiscoveryLookupBinding 
//gsoap ns4  service type:	DiscoveryLookupPort 
//gsoap ns4  service namespace:	http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref RemoteDiscoveryBinding
  - @ref DiscoveryLookupBinding

*/

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding  "RemoteDiscoveryBinding"
  - @ref __ns3__Hello
  - @ref __ns3__Bye

@section RemoteDiscoveryBinding_ports Endpoints of Binding  "RemoteDiscoveryBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page DiscoveryLookupBinding Binding "DiscoveryLookupBinding"

@section DiscoveryLookupBinding_operations Operations of Binding  "DiscoveryLookupBinding"
  - @ref __ns4__Probe

@section DiscoveryLookupBinding_ports Endpoints of Binding  "DiscoveryLookupBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * RemoteDiscoveryBinding                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns3__Hello                                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__Hello" of service binding "RemoteDiscoveryBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver10/network/wsdl/Hello"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__HelloType*              tdn__Hello,
    // response parameters:
    struct ns1__ResolveType*            tdn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__Hello(
    struct soap *soap,
    // request parameters:
    struct ns1__HelloType*              tdn__Hello,
    // response parameters:
    struct ns1__ResolveType*            tdn__HelloResponse
  );
@endcode

*/

//gsoap ns3  service method-style:	Hello document
//gsoap ns3  service method-encoding:	Hello literal
//gsoap ns3  service method-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
int __ns3__Hello(
    struct ns1__HelloType*              tdn__Hello,	///< Request parameter
    struct ns1__ResolveType*            tdn__HelloResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__Bye                                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__Bye" of service binding "RemoteDiscoveryBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver10/network/wsdl/Bye"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__ByeType*                tdn__Bye,
    // response parameters:
    struct ns1__ResolveType*            tdn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__Bye(
    struct soap *soap,
    // request parameters:
    struct ns1__ByeType*                tdn__Bye,
    // response parameters:
    struct ns1__ResolveType*            tdn__ByeResponse
  );
@endcode

*/

//gsoap ns3  service method-style:	Bye document
//gsoap ns3  service method-encoding:	Bye literal
//gsoap ns3  service method-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
int __ns3__Bye(
    struct ns1__ByeType*                tdn__Bye,	///< Request parameter
    struct ns1__ResolveType*            tdn__ByeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * DiscoveryLookupBinding                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns4__Probe                                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__Probe" of service binding "DiscoveryLookupBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.onvif.org/ver10/network/wsdl/Probe"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__ProbeType*              tdn__Probe,
    // response parameters:
    struct ns1__ProbeMatchesType*       tdn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__Probe(
    struct soap *soap,
    // request parameters:
    struct ns1__ProbeType*              tdn__Probe,
    // response parameters:
    struct ns1__ProbeMatchesType*       tdn__ProbeResponse
  );
@endcode

*/

//gsoap ns4  service method-style:	Probe document
//gsoap ns4  service method-encoding:	Probe literal
//gsoap ns4  service method-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
int __ns4__Probe(
    struct ns1__ProbeType*              tdn__Probe,	///< Request parameter
    struct ns1__ProbeMatchesType*       tdn__ProbeResponse	///< Response parameter
);

/* End of onvif.h */
