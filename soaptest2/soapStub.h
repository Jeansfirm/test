/* soapStub.h
   Generated by gSOAP 2.7.9l from onvif.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__RelationshipType
#define SOAP_TYPE_ns1__RelationshipType (19)
/* ns1:RelationshipType */
enum ns1__RelationshipType {ns1__RelationshipType__ns1__Suppression = 0};
#endif

#ifndef SOAP_TYPE_ns1__FaultCodeType
#define SOAP_TYPE_ns1__FaultCodeType (20)
/* ns1:FaultCodeType */
enum ns1__FaultCodeType {ns1__FaultCodeType__ns1__MatchingRuleNotSupported = 0};
#endif

#ifndef SOAP_TYPE_ns2__RelationshipTypeValues
#define SOAP_TYPE_ns2__RelationshipTypeValues (21)
/* ns2:RelationshipTypeValues */
enum ns2__RelationshipTypeValues {ns2__RelationshipTypeValues__ns2__Reply = 0};
#endif

#ifndef SOAP_TYPE_ns2__FaultSubcodeValues
#define SOAP_TYPE_ns2__FaultSubcodeValues (22)
/* ns2:FaultSubcodeValues */
enum ns2__FaultSubcodeValues {ns2__FaultSubcodeValues__ns2__InvalidMessageInformationHeader = 0, ns2__FaultSubcodeValues__ns2__MessageInformationHeaderRequired = 1, ns2__FaultSubcodeValues__ns2__DestinationUnreachable = 2, ns2__FaultSubcodeValues__ns2__ActionNotSupported = 3, ns2__FaultSubcodeValues__ns2__EndpointUnavailable = 4};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (10)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__HelloType
#define SOAP_TYPE_ns1__HelloType (23)
/* ns1:HelloType */
struct ns1__HelloType
{
	struct ns2__EndpointReferenceType *ns2__EndpointReference;	/* required element of type ns2:EndpointReferenceType */
	char *ns1__Types;	/* optional element of type ns1:QNameListType */
	struct ns1__ScopesType *ns1__Scopes;	/* optional element of type ns1:ScopesType */
	char *ns1__XAddrs;	/* optional element of type ns1:UriListType */
	unsigned int ns1__MetadataVersion;	/* required element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__ByeType
#define SOAP_TYPE_ns1__ByeType (29)
/* ns1:ByeType */
struct ns1__ByeType
{
	struct ns2__EndpointReferenceType *ns2__EndpointReference;	/* required element of type ns2:EndpointReferenceType */
	char *ns1__Types;	/* optional element of type ns1:QNameListType */
	struct ns1__ScopesType *ns1__Scopes;	/* optional element of type ns1:ScopesType */
	char *ns1__XAddrs;	/* optional element of type ns1:UriListType */
	unsigned int *ns1__MetadataVersion;	/* optional element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__ProbeType
#define SOAP_TYPE_ns1__ProbeType (31)
/* ns1:ProbeType */
struct ns1__ProbeType
{
	char *ns1__Types;	/* optional element of type ns1:QNameListType */
	struct ns1__ScopesType *ns1__Scopes;	/* optional element of type ns1:ScopesType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__ProbeMatchesType
#define SOAP_TYPE_ns1__ProbeMatchesType (32)
/* ns1:ProbeMatchesType */
struct ns1__ProbeMatchesType
{
	int __sizeProbeMatch;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <ProbeMatch> */
	struct ns1__ProbeMatchType *ProbeMatch;	/* optional element of type ns1:ProbeMatchType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__ProbeMatchType
#define SOAP_TYPE_ns1__ProbeMatchType (33)
/* ns1:ProbeMatchType */
struct ns1__ProbeMatchType
{
	struct ns2__EndpointReferenceType *ns2__EndpointReference;	/* required element of type ns2:EndpointReferenceType */
	char *ns1__Types;	/* optional element of type ns1:QNameListType */
	struct ns1__ScopesType *ns1__Scopes;	/* optional element of type ns1:ScopesType */
	char *ns1__XAddrs;	/* optional element of type ns1:UriListType */
	unsigned int ns1__MetadataVersion;	/* required element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__ResolveType
#define SOAP_TYPE_ns1__ResolveType (35)
/* ns1:ResolveType */
struct ns1__ResolveType
{
	struct ns2__EndpointReferenceType *ns2__EndpointReference;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns2:EndpointReferenceType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__ResolveMatchesType
#define SOAP_TYPE_ns1__ResolveMatchesType (36)
/* ns1:ResolveMatchesType */
struct ns1__ResolveMatchesType
{
	struct ns1__ResolveMatchType *ResolveMatch;	/* optional element of type ns1:ResolveMatchType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__ResolveMatchType
#define SOAP_TYPE_ns1__ResolveMatchType (37)
/* ns1:ResolveMatchType */
struct ns1__ResolveMatchType
{
	struct ns2__EndpointReferenceType *ns2__EndpointReference;	/* required element of type ns2:EndpointReferenceType */
	char *ns1__Types;	/* optional element of type ns1:QNameListType */
	struct ns1__ScopesType *ns1__Scopes;	/* optional element of type ns1:ScopesType */
	char *ns1__XAddrs;	/* required element of type ns1:UriListType */
	unsigned int ns1__MetadataVersion;	/* required element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__SecurityType
#define SOAP_TYPE_ns1__SecurityType (39)
/* ns1:SecurityType */
struct ns1__SecurityType
{
	struct ns1__SigType *ns1__Sig;	/* optional element of type ns1:SigType */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__SigType
#define SOAP_TYPE_ns1__SigType (40)
/* ns1:SigType */
struct ns1__SigType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *Scheme;	/* required attribute of type xsd:anyURI */
	struct xsd__base64Binary *KeyId;	/* optional attribute of type xsd:base64Binary */
	char *Refs;	/* required attribute of type xsd:IDREFS */
	struct xsd__base64Binary Sig;	/* required attribute of type xsd:base64Binary */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__EndpointReferenceType
#define SOAP_TYPE_ns2__EndpointReferenceType (24)
/* ns2:EndpointReferenceType */
struct ns2__EndpointReferenceType
{
	struct ns2__AttributedURI *Address;	/* required element of type ns2:AttributedURI */
	struct ns2__ReferencePropertiesType *ReferenceProperties;	/* optional element of type ns2:ReferencePropertiesType */
	struct ns2__ReferenceParametersType *ReferenceParameters;	/* optional element of type ns2:ReferenceParametersType */
	struct ns2__AttributedQName *PortType;	/* optional element of type ns2:AttributedQName */
	struct ns2__ServiceNameType *ServiceName;	/* optional element of type ns2:ServiceNameType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ReferencePropertiesType
#define SOAP_TYPE_ns2__ReferencePropertiesType (45)
/* ns2:ReferencePropertiesType */
struct ns2__ReferencePropertiesType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__ReferenceParametersType
#define SOAP_TYPE_ns2__ReferenceParametersType (47)
/* ns2:ReferenceParametersType */
struct ns2__ReferenceParametersType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns1__ScopesType
#define SOAP_TYPE_ns1__ScopesType (26)
/* Primitive ns1:ScopesType schema type: */
struct ns1__ScopesType
{
	char *__item;
	char *MatchBy;	/* optional attribute of type xsd:anyURI */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns1__AppSequenceType
#define SOAP_TYPE_ns1__AppSequenceType (53)
/* ns1:AppSequenceType */
struct ns1__AppSequenceType
{
	unsigned int InstanceId;	/* required attribute of type xsd:unsignedInt */
	char *SequenceId;	/* optional attribute of type xsd:anyURI */
	unsigned int MessageNumber;	/* required attribute of type xsd:unsignedInt */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ServiceNameType
#define SOAP_TYPE_ns2__ServiceNameType (51)
/* Primitive ns2:ServiceNameType schema type: */
struct ns2__ServiceNameType
{
	char *__item;
	char *PortName;	/* optional attribute of type xsd:NCName */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__Relationship
#define SOAP_TYPE_ns2__Relationship (54)
/* Primitive ns2:Relationship schema type: */
struct ns2__Relationship
{
	char *__item;
	char *RelationshipType;	/* optional attribute of type xsd:QName */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ReplyAfterType
#define SOAP_TYPE_ns2__ReplyAfterType (55)
/* Primitive ns2:ReplyAfterType schema type: */
struct ns2__ReplyAfterType
{
	char *__item;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__RetryAfterType
#define SOAP_TYPE_ns2__RetryAfterType (56)
/* Primitive ns2:RetryAfterType schema type: */
struct ns2__RetryAfterType
{
	char *__item;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AttributedQName
#define SOAP_TYPE_ns2__AttributedQName (49)
/* Primitive ns2:AttributedQName schema type: */
struct ns2__AttributedQName
{
	char *__item;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AttributedURI
#define SOAP_TYPE_ns2__AttributedURI (43)
/* Primitive ns2:AttributedURI schema type: */
struct ns2__AttributedURI
{
	char *__item;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE___ns3__Hello
#define SOAP_TYPE___ns3__Hello (60)
/* Operation wrapper: */
struct __ns3__Hello
{
	struct ns1__HelloType *tdn__Hello;	/* optional element of type ns1:HelloType */
};
#endif

#ifndef SOAP_TYPE___ns3__Bye
#define SOAP_TYPE___ns3__Bye (63)
/* Operation wrapper: */
struct __ns3__Bye
{
	struct ns1__ByeType *tdn__Bye;	/* optional element of type ns1:ByeType */
};
#endif

#ifndef SOAP_TYPE___ns4__Probe
#define SOAP_TYPE___ns4__Probe (67)
/* Operation wrapper: */
struct __ns4__Probe
{
	struct ns1__ProbeType *tdn__Probe;	/* optional element of type ns1:ProbeType */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (68)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (69)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (71)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (74)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (75)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (6)
typedef char *xsd__ID;
#endif

#ifndef SOAP_TYPE_xsd__IDREFS
#define SOAP_TYPE_xsd__IDREFS (7)
typedef char *xsd__IDREFS;
#endif

#ifndef SOAP_TYPE_xsd__NCName
#define SOAP_TYPE_xsd__NCName (8)
typedef char *xsd__NCName;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (9)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (14)
typedef char *xsd__nonNegativeInteger;
#endif

#ifndef SOAP_TYPE_ns1__OpenRelationshipType
#define SOAP_TYPE_ns1__OpenRelationshipType (15)
typedef char *ns1__OpenRelationshipType;
#endif

#ifndef SOAP_TYPE_ns1__QNameListType
#define SOAP_TYPE_ns1__QNameListType (16)
typedef char *ns1__QNameListType;
#endif

#ifndef SOAP_TYPE_ns1__UriListType
#define SOAP_TYPE_ns1__UriListType (17)
typedef char *ns1__UriListType;
#endif

#ifndef SOAP_TYPE_ns1__FaultCodeOpenType
#define SOAP_TYPE_ns1__FaultCodeOpenType (18)
typedef char *ns1__FaultCodeOpenType;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns3__Hello(struct soap*, struct ns1__HelloType *tdn__Hello, struct ns1__ResolveType *tdn__HelloResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns3__Bye(struct soap*, struct ns1__ByeType *tdn__Bye, struct ns1__ResolveType *tdn__ByeResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns4__Probe(struct soap*, struct ns1__ProbeType *tdn__Probe, struct ns1__ProbeMatchesType *tdn__ProbeResponse);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__Hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__HelloType *tdn__Hello, struct ns1__ResolveType *tdn__HelloResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__Bye(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__ByeType *tdn__Bye, struct ns1__ResolveType *tdn__ByeResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__Probe(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__ProbeType *tdn__Probe, struct ns1__ProbeMatchesType *tdn__ProbeResponse);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns3__Hello(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns3__Bye(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns4__Probe(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
